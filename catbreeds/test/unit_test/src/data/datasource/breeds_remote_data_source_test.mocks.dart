// Mocks generated by Mockito 5.4.4 from annotations
// in catbreeds/test/unit_test/src/data/datasource/breeds_remote_data_source_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:catbreeds/src/config/rest_consumer/method_type.dart' as _i4;
import 'package:catbreeds/src/config/rest_consumer/rest_consumer.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeRequestBuilder_0 extends _i1.SmartFake
    implements _i2.RequestBuilder {
  _FakeRequestBuilder_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [RequestBuilder].
///
/// See the documentation for Mockito's code generation for more information.
class MockRequestBuilder extends _i1.Mock implements _i2.RequestBuilder {
  MockRequestBuilder() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.RequestBuilder path(String? path) => (super.noSuchMethod(
        Invocation.method(
          #path,
          [path],
        ),
        returnValue: _FakeRequestBuilder_0(
          this,
          Invocation.method(
            #path,
            [path],
          ),
        ),
      ) as _i2.RequestBuilder);

  @override
  _i2.RequestBuilder headers(Map<String, String>? headers) =>
      (super.noSuchMethod(
        Invocation.method(
          #headers,
          [headers],
        ),
        returnValue: _FakeRequestBuilder_0(
          this,
          Invocation.method(
            #headers,
            [headers],
          ),
        ),
      ) as _i2.RequestBuilder);

  @override
  _i2.RequestBuilder queryParameters(Map<String, String>? parameters) =>
      (super.noSuchMethod(
        Invocation.method(
          #queryParameters,
          [parameters],
        ),
        returnValue: _FakeRequestBuilder_0(
          this,
          Invocation.method(
            #queryParameters,
            [parameters],
          ),
        ),
      ) as _i2.RequestBuilder);

  @override
  _i3.Future<String> method(
    _i4.MethodType? methodType, {
    bool? isMultipart,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #method,
          [methodType],
          {#isMultipart: isMultipart},
        ),
        returnValue: _i3.Future<String>.value(_i5.dummyValue<String>(
          this,
          Invocation.method(
            #method,
            [methodType],
            {#isMultipart: isMultipart},
          ),
        )),
      ) as _i3.Future<String>);
}
